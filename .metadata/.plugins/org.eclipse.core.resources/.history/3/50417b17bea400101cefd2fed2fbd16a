package com.liangshan.jianjian.android;

import com.joelapenna.foursquared.Foursquared;
import com.joelapenna.foursquared.FriendsActivity;
import com.joelapenna.foursquared.FriendsActivity.TaskCheckins;
import com.liangshan.jianjian.types.Group;
import com.liangshan.jianjian.types.RecommendMsg;

import android.app.ListActivity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.util.Log;
import android.view.ViewGroup;

public class FriendsActivity extends ListActivity {    
    static final String TAG = "FriendsActivity";
    static final boolean DEBUG = JianjianSettings.DEBUG;
    
    private StateHolder mStateHolder;
    private ViewGroup mLayoutEmpty;
    
    private static final int SORT_METHOD_RECENT = 0;
    private static final int SORT_METHOD_NEARBY = 1;
    
    private BroadcastReceiver mLoggedOutReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            if (DEBUG) Log.d(TAG, "onReceive: " + intent);
            finish();
        }
    };
    
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);        
        registerReceiver(mLoggedOutReceiver, new IntentFilter(Jianjianroid.INTENT_ACTION_LOGGED_OUT));
        
        if (getLastNonConfigurationInstance() != null) {
            mStateHolder = (StateHolder) getLastNonConfigurationInstance();
            mStateHolder.setActivity(this);
        } else {
            mStateHolder = new StateHolder();
            mStateHolder.setSortMethod(SORT_METHOD_RECENT);
        }
        
        ensureUi();
        
        Jianjianroid foursquared = (Jianjianroid)getApplication();
        if (foursquared.isReady()) {
            if (!mStateHolder.getRanOnce()) {
                mStateHolder.startTask(this);
            }
        }
        
        setContentView(R.layout.friends_list_activity);
        
    }
    

    @Override
    public void onResume() {
        super.onResume();

        ((Jianjianroid) getApplication()).requestLocationUpdates(true);
    }

    @Override
    public void onPause() {
        super.onPause();
        
        ((Jianjianroid) getApplication()).removeLocationUpdates();

        if (isFinishing()) {
            //mListAdapter.removeObserver();
            unregisterReceiver(mLoggedOutReceiver);
            mStateHolder.cancel();
        }
    }
    
    /**
     * 
     */
    private void ensureUi() {
        // TODO Auto-generated method stub
        
    }
    
    private static class StateHolder {
        private Group<RecommendMsg> mRecMsgs;
        private int mSortMethod;
        private boolean mRanOnce;
        private boolean mIsRunningTask;
        //private TaskCheckins mTaskCheckins;
        
        public StateHolder() {
            mRanOnce = false;
            mIsRunningTask = false; 
            mRecMsgs = new Group<RecommendMsg>();
        }
        
        public int getSortMethod() {
            return mSortMethod;
        }
        
        public void setSortMethod(int sortMethod) {
            mSortMethod = sortMethod;
        }
        
        public Group<RecommendMsg> getCheckins() {
            return mRecMsgs;
        }
        
        public void setCheckins(Group<RecommendMsg> recommends) {
            mRecMsgs = recommends;
        }
        
        public boolean getRanOnce() {
            return mRanOnce;
        }
        
        public void setRanOnce(boolean ranOnce) {
            mRanOnce = ranOnce;
        }
        
        public void setActivity(FriendsActivity activity) {
            if (mIsRunningTask) {
                //mTaskCheckins.setActivity(activity);
            }
        }
        public void startTask(FriendsActivity activity) {
            if (!mIsRunningTask) {
                //mTaskCheckins = new TaskCheckins(activity);
                //mTaskCheckins.execute();
                mIsRunningTask = true;
            }
        }
        public void cancel() {
            if (mIsRunningTask) {
                //mTaskCheckins.cancel(true);
                mIsRunningTask = false;
            }
        }
        
    }

}
