package com.liangshan.jianjian.android;

import com.joelapenna.foursquared.FriendsActivity.StateHolder;
import com.joelapenna.foursquared.widget.SeparatedListAdapter;
import com.liangshan.jianjian.types.Group;
import com.liangshan.jianjian.types.RecommendMsg;

import android.app.ListActivity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.util.Log;
import android.view.ViewGroup;

public class FriendsActivity extends ListActivity {    
    static final String TAG = "FriendsActivity";
    static final boolean DEBUG = JianjianSettings.DEBUG;
    
    private StateHolder mStateHolder;
    private ViewGroup mLayoutEmpty;
    
    private static final int SORT_METHOD_RECENT = 0;
    private static final int SORT_METHOD_NEARBY = 1;
    
    private BroadcastReceiver mLoggedOutReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            if (DEBUG) Log.d(TAG, "onReceive: " + intent);
            finish();
        }
    };
    
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);        
        registerReceiver(mLoggedOutReceiver, new IntentFilter(Jianjianroid.INTENT_ACTION_LOGGED_OUT));
        
        if (getLastNonConfigurationInstance() != null) {
            mStateHolder = (StateHolder) getLastNonConfigurationInstance();
            mStateHolder.setActivity(this);
        } else {
            mStateHolder = new StateHolder();
            mStateHolder.setSortMethod(SORT_METHOD_RECENT);
        }
        
        setContentView(R.layout.friends_list_activity);
        
    }
    
    private static class StateHolder {
        private Group<RecommendMsg> mRecMsgs;
        private int mSortMethod;
        private boolean mRanOnce;
        private boolean mIsRunningTask;
        //private TaskCheckins mTaskCheckins;
        
        public StateHolder() {
            mRanOnce = false;
            mIsRunningTask = false; 
            mRecMsgs = new Group<RecommendMsg>();
        }
        
        
    }

}
